//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("eVehicle", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class EVehicle : genericRailML.TVehicle
    {
        
        /// <summary>
        /// <para>general management and classification data of vehicle</para>
        /// </summary>
        [XmlElementAttribute("classification", Order=0)]
        public EClassification Classification { get; set; }
        
        /// <summary>
        /// <para>engine data about a motor car or locomotive</para>
        /// </summary>
        [XmlElementAttribute("engine", Order=1)]
        public EEngine Engine { get; set; }
        
        /// <summary>
        /// <para>technical and payload data about a (motor) car or locomotive</para>
        /// </summary>
        [XmlElementAttribute("wagon", Order=2)]
        public EWagon Wagon { get; set; }
        
        /// <summary>
        /// <para>data about brake systems independent from propulsion</para>
        /// </summary>
        [XmlElementAttribute("vehicleBrakes", Order=3)]
        public EVehicleBrakes VehicleBrakes { get; set; }
        
        /// <summary>
        /// <para>matrix of permissible speed, line classification and payload</para>
        /// </summary>
        [XmlElementAttribute("loadLimitMatrix", Order=4)]
        public ELoadLimitMatrix LoadLimitMatrix { get; set; }
        
        /// <summary>
        /// <para>list of permissible curve radius in horizontal and vertical direction</para>
        /// </summary>
        [XmlElementAttribute("curvingLimitation", Order=5)]
        public ECurvingLimitation CurvingLimitation { get; set; }
        
        [XmlElementAttribute("maintenanceIntervals", Order=6)]
        public EMaintenanceIntervals MaintenanceIntervals { get; set; }
    }
}
