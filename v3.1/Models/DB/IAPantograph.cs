//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.DB
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    internal partial interface IAPantograph
    {
        
        /// <summary>
        /// <para>number of the pantograph on the vehicle, starting with '1'</para>
        /// <para>generic type for counters (e.g. order number of a vehicle in an formation), starting with '1'</para>
        /// </summary>
        string OrderNumber
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>descriptive info about design type</para>
        /// <para>system-wide known name of an railway facility (e.g. station, timetable period or vehicle), allowing digits, letters and white space</para>
        /// </summary>
        string DesignType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>position of the pantograph with respect to typical locations of a section</para>
        /// </summary>
        string PositionOnSection
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>number of vehicle section the panto is fitted on in case of articulated vehicle, normally '1'</para>
        /// <para>generic type for counters (e.g. number of equipment), allowing zero</para>
        /// </summary>
        string FittedSection
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>the way of controlling the pantograph drive</para>
        /// </summary>
        string ControlType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>width of pan head</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        System.Nullable<decimal> HeadWidth
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>maximum current transferred by the panto during driving</para>
        /// <para>generic type for electric current values measured in ampere</para>
        /// </summary>
        System.Nullable<decimal> MaxCurrentDriving
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>maximum current transferred by the panto in standstill of the vehicle</para>
        /// <para>generic type for electric current values measured in ampere</para>
        /// </summary>
        System.Nullable<decimal> MaxCurrentStandstill
        {
            get;
            set;
        }
    }
}
