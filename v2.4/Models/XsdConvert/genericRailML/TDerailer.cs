//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("tDerailer", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class TDerailer : TRuleCodeElement
    {
        
        /// <summary>
        /// <para>Side, to which the vehicle will be derailed (left or right) considering the orientation of the track.</para>
        /// </summary>
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("derailSide")]
        public TSide DerailSideValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DerailSide-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DerailSide property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DerailSideValueSpecified { get; set; }
        
        /// <summary>
        /// <para>Side, to which the vehicle will be derailed (left or right) considering the orientation of the track.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<TSide> DerailSide
        {
            get
            {
                if (this.DerailSideValueSpecified)
                {
                    return this.DerailSideValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DerailSideValue = value.GetValueOrDefault();
                this.DerailSideValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>kind of derail device (cp. book "Railway Signalling and Interlocking" by Gregor Theeg and Sergej Vlasenko (Editors), p. 155)</para>
        /// </summary>
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("kind")]
        public TDerailKind KindValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kind-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kind property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool KindValueSpecified { get; set; }
        
        /// <summary>
        /// <para>kind of derail device (cp. book "Railway Signalling and Interlocking" by Gregor Theeg and Sergej Vlasenko (Editors), p. 155)</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<TDerailKind> Kind
        {
            get
            {
                if (this.KindValueSpecified)
                {
                    return this.KindValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.KindValue = value.GetValueOrDefault();
                this.KindValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>specification of the derailer</para>
        /// </summary>
        [XmlAttributeAttribute("model")]
        public string Model { get; set; }
    }
}
