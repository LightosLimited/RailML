//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.DB
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tStopDescription", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EStopDescription))]
    internal partial class TStopDescription : IAStopDescription, IAnyAttribute
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der diese Entit√§t eindeutig identifiziert, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.KeyAttribute()]
        public long Id { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// <para>provide an extension point for non-railML elements in foreign namespace</para>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TStopDescription" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TStopDescription" /> class.</para>
        /// </summary>
        public TStopDescription()
        {
            this._any = new System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement>();
        }
        
        /// <summary>
        /// <para>characterizes the stop as either commercial or operational stop</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("commercial")]
        public bool CommercialValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Commercial-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Commercial property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CommercialValueSpecified { get; set; }
        
        /// <summary>
        /// <para>characterizes the stop as either commercial or operational stop</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Commercial
        {
            get
            {
                if (this.CommercialValueSpecified)
                {
                    return this.CommercialValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CommercialValue = value.GetValueOrDefault();
                this.CommercialValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>a commercial stop, depending on a certain demand</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("stopOnRequest")]
        public bool StopOnRequestValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StopOnRequest-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StopOnRequest property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool StopOnRequestValueSpecified { get; set; }
        
        /// <summary>
        /// <para>a commercial stop, depending on a certain demand</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> StopOnRequest
        {
            get
            {
                if (this.StopOnRequestValueSpecified)
                {
                    return this.StopOnRequestValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StopOnRequestValue = value.GetValueOrDefault();
                this.StopOnRequestValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>describes, if passengers/goods are not supposed to enter or leave the train</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("onOff")]
        public TOnOff OnOffValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OnOff-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OnOff property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OnOffValueSpecified { get; set; }
        
        /// <summary>
        /// <para>describes, if passengers/goods are not supposed to enter or leave the train</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TOnOff> OnOff
        {
            get
            {
                if (this.OnOffValueSpecified)
                {
                    return this.OnOffValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OnOffValue = value.GetValueOrDefault();
                this.OnOffValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>describes the reason for the stop in a detailed but not predefined way</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("purpose")]
        public string Purpose { get; set; }
        
        /// <summary>
        /// <para>indicates a forbidden stop for heavy goods trains</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("guaranteedPass")]
        public bool GuaranteedPassValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuaranteedPass-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuaranteedPass property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuaranteedPassValueSpecified { get; set; }
        
        /// <summary>
        /// <para>indicates a forbidden stop for heavy goods trains</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> GuaranteedPass
        {
            get
            {
                if (this.GuaranteedPassValueSpecified)
                {
                    return this.GuaranteedPassValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuaranteedPassValue = value.GetValueOrDefault();
                this.GuaranteedPassValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>the stop is requested by the infrastructure manager</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("operationalStopOrdered")]
        public bool OperationalStopOrderedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperationalStopOrdered-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OperationalStopOrdered property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OperationalStopOrderedValueSpecified { get; set; }
        
        /// <summary>
        /// <para>the stop is requested by the infrastructure manager</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> OperationalStopOrdered
        {
            get
            {
                if (this.OperationalStopOrderedValueSpecified)
                {
                    return this.OperationalStopOrderedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OperationalStopOrderedValue = value.GetValueOrDefault();
                this.OperationalStopOrderedValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>references a reduction of the operating days of the stop compared to the operating days of the train part</para>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("operatingPeriodRef")]
        public string OperatingPeriodRef { get; set; }
        
        /// <summary>
        /// <para>refers to the id attribute of the associated stop post element</para>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("stopPostRef")]
        public string StopPostRef { get; set; }
    }
}
