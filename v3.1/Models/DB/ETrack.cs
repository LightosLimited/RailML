//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.DB
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("eTrack", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    internal partial class ETrack : TTrack
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _trackDescr;
        
        /// <summary>
        /// <para>DEPRECATED with railML version 2.4</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("trackDescr", Order=0)]
        public System.Collections.ObjectModel.Collection<string> TrackDescr
        {
            get
            {
                return this._trackDescr;
            }
            private set
            {
                this._trackDescr = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TrackDescr-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TrackDescr collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool TrackDescrSpecified
        {
            get
            {
                return (this.TrackDescr.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ETrack" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ETrack" /> class.</para>
        /// </summary>
        public ETrack()
        {
            this._trackDescr = new System.Collections.ObjectModel.Collection<string>();
            this._any = new System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("trackTopology", Order=1)]
        public ETrackTopology TrackTopology { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("trackElements", Order=2)]
        public ETrackElements TrackElements { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ocsElements", Order=3)]
        public EOcsElements OcsElements { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("infraAttrGroupRefs", Order=4)]
        public EInfraAttrGroupRefs InfraAttrGroupRefs { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// <para>Deprecated for next major release, use "generic any element" instead.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=5)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
    }
}
