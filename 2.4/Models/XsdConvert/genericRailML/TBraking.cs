//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    /// <summary>
    /// <para>parameters describing the train braking configuration</para>
    /// </summary>
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("tBraking", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class TBraking : genericRailML.IAMinBasicBrakeAttributes
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der diese Entit√§t eindeutig identifiziert, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [KeyAttribute()]
        public long Id { get; set; }
        
        /// <summary>
        /// <para>vacuum or compressed air brake, hand brake, parking brake, cable brake</para>
        /// </summary>
        [XmlAttributeAttribute("brakeType")]
        public string BrakeType { get; set; }
        
        /// <summary>
        /// <para>base brake switch, one of G, P or R</para>
        /// </summary>
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("airBrakeApplicationPosition")]
        public genericRailML.TAirBrakeApplicationPosition AirBrakeApplicationPositionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AirBrakeApplicationPosition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AirBrakeApplicationPosition property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AirBrakeApplicationPositionValueSpecified { get; set; }
        
        /// <summary>
        /// <para>base brake switch, one of G, P or R</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<genericRailML.TAirBrakeApplicationPosition> AirBrakeApplicationPosition
        {
            get
            {
                if (this.AirBrakeApplicationPositionValueSpecified)
                {
                    return this.AirBrakeApplicationPositionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AirBrakeApplicationPositionValue = value.GetValueOrDefault();
                this.AirBrakeApplicationPositionValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>minimum brake percentage of the train</para>
        /// <para>Brake percentage as value of braking performance in relation to vehicle weight</para>
        /// <para xml:lang="en">Maximum inclusive value: 225.</para>
        /// <para xml:lang="en">Minimum inclusive value: 6.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "6", "225")]
        [XmlAttributeAttribute("minimumBrakePercentage")]
        public string MinimumBrakePercentage { get; set; }
    }
}
