//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("eTrainPartSequence", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class ETrainPartSequence : genericRailML.TTrainPartSequence
    {
        
        [XmlIgnoreAttribute()]
        private Collection<genericRailML.TTrainPartRef> _trainPartRef;
        
        [XmlElementAttribute("trainPartRef", Order=0)]
        public Collection<genericRailML.TTrainPartRef> TrainPartRef
        {
            get
            {
                return this._trainPartRef;
            }
            private set
            {
                this._trainPartRef = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ETrainPartSequence" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ETrainPartSequence" /> class.</para>
        /// </summary>
        public ETrainPartSequence()
        {
            this._trainPartRef = new Collection<genericRailML.TTrainPartRef>();
            this._speedProfileRef = new Collection<genericRailML.TSpeedProfileRef>();
            this._topologyReference = new Collection<genericRailML.TTopologyReference>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<genericRailML.TSpeedProfileRef> _speedProfileRef;
        
        /// <summary>
        /// <para>a reference to a speed profile; there could be several speed profiles to be considered</para>
        /// </summary>
        [XmlElementAttribute("speedProfileRef", Order=1)]
        public Collection<genericRailML.TSpeedProfileRef> SpeedProfileRef
        {
            get
            {
                return this._speedProfileRef;
            }
            private set
            {
                this._speedProfileRef = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SpeedProfileRef-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SpeedProfileRef collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        public bool SpeedProfileRefSpecified
        {
            get
            {
                return (this.SpeedProfileRef.Count != 0);
            }
        }
        
        [XmlElementAttribute("equipmentUsage", Order=2)]
        public EEquipmentUsage EquipmentUsage { get; set; }
        
        [XmlElementAttribute("brakeUsage", Order=3)]
        public EBrakeUsage BrakeUsage { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<genericRailML.TTopologyReference> _topologyReference;
        
        [XmlElementAttribute("topologyReference", Order=4)]
        public Collection<genericRailML.TTopologyReference> TopologyReference
        {
            get
            {
                return this._topologyReference;
            }
            private set
            {
                this._topologyReference = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TopologyReference-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TopologyReference collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        public bool TopologyReferenceSpecified
        {
            get
            {
                return (this.TopologyReference.Count != 0);
            }
        }
    }
}
