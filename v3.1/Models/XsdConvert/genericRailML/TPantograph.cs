//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.XsdConvert.genericRailML
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>description of any installed pantograph</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tPantograph", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(genericRailML.EPantograph))]
    internal partial class TPantograph : IAPantograph
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der diese Entit√§t eindeutig identifiziert, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.KeyAttribute()]
        public long Id { get; set; }
        
        /// <summary>
        /// <para>number of the pantograph on the vehicle, starting with '1'</para>
        /// <para>generic type for counters (e.g. order number of a vehicle in an formation), starting with '1'</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("orderNumber")]
        public string OrderNumber { get; set; }
        
        /// <summary>
        /// <para>descriptive info about design type</para>
        /// <para>system-wide known name of an railway facility (e.g. station, timetable period or vehicle), allowing digits, letters and white space</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("designType")]
        public string DesignType { get; set; }
        
        /// <summary>
        /// <para>position of the pantograph with respect to typical locations of a section</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("positionOnSection")]
        public string PositionOnSection { get; set; }
        
        /// <summary>
        /// <para>number of vehicle section the panto is fitted on in case of articulated vehicle, normally '1'</para>
        /// <para>generic type for counters (e.g. number of equipment), allowing zero</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("fittedSection")]
        public string FittedSection { get; set; }
        
        /// <summary>
        /// <para>the way of controlling the pantograph drive</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("controlType")]
        public string ControlType { get; set; }
        
        /// <summary>
        /// <para>width of pan head</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("headWidth")]
        public decimal HeadWidthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeadWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeadWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool HeadWidthValueSpecified { get; set; }
        
        /// <summary>
        /// <para>width of pan head</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> HeadWidth
        {
            get
            {
                if (this.HeadWidthValueSpecified)
                {
                    return this.HeadWidthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HeadWidthValue = value.GetValueOrDefault();
                this.HeadWidthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>maximum current transferred by the panto during driving</para>
        /// <para>generic type for electric current values measured in ampere</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("maxCurrentDriving")]
        public decimal MaxCurrentDrivingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxCurrentDriving-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxCurrentDriving property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaxCurrentDrivingValueSpecified { get; set; }
        
        /// <summary>
        /// <para>maximum current transferred by the panto during driving</para>
        /// <para>generic type for electric current values measured in ampere</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> MaxCurrentDriving
        {
            get
            {
                if (this.MaxCurrentDrivingValueSpecified)
                {
                    return this.MaxCurrentDrivingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaxCurrentDrivingValue = value.GetValueOrDefault();
                this.MaxCurrentDrivingValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>maximum current transferred by the panto in standstill of the vehicle</para>
        /// <para>generic type for electric current values measured in ampere</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("maxCurrentStandstill")]
        public decimal MaxCurrentStandstillValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxCurrentStandstill-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxCurrentStandstill property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaxCurrentStandstillValueSpecified { get; set; }
        
        /// <summary>
        /// <para>maximum current transferred by the panto in standstill of the vehicle</para>
        /// <para>generic type for electric current values measured in ampere</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> MaxCurrentStandstill
        {
            get
            {
                if (this.MaxCurrentStandstillValueSpecified)
                {
                    return this.MaxCurrentStandstillValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaxCurrentStandstillValue = value.GetValueOrDefault();
                this.MaxCurrentStandstillValueSpecified = value.HasValue;
            }
        }
    }
}
