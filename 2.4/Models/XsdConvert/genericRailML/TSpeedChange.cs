//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.XsdConvert.genericRailML
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tSpeedChange", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    internal partial class TSpeedChange : TStrictOrientedElement, IASpeed
    {
        
        /// <summary>
        /// <para>DEPRECATED. Use the new attribute etcsTrainCategory instead.</para>
        /// <para>generic type for category names of trains; allowing digits, letters and white spaces; length not limited</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("trainCategory")]
        public string TrainCategory { get; set; }
        
        /// <summary>
        /// <para>the international train category number as specified on page 38 in ERA_ERTMS_040001 "Assignment of values to ETCS variables" v1.9 from 10/07/12</para>
        /// <para>the international train category number as specified on page 38 in ERA_ERTMS_040001 "Assignment of values to ETCS variables" v1.9 from 10/07/12</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 15.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0", "15")]
        [System.Xml.Serialization.XmlAttributeAttribute("etcsTrainCategory")]
        public string EtcsTrainCategory { get; set; }
        
        /// <summary>
        /// <para>reference to a speedProfile</para>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("profileRef")]
        public string ProfileRef { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("status")]
        public string Status { get; set; }
        
        /// <summary>
        /// <para>maximum allowed speed in km/h</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("vMax")]
        public string VMax { get; set; }
        
        /// <summary>
        /// <para>Reference to the part of the train from where on the speed change is valid. Normally, a speed restriction that is higher than the train's current speed will be valid when the end of the train has passed the speed change while a speed restriction that is lower than the train's current speed will be valid already when the head of train passes the speedChange.</para>
        /// <para>If the attribute is not given, it means that the information is not known.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("trainRelation")]
        public string TrainRelation { get; set; }
        
        /// <summary>
        /// <para>specifying the speedChange as a mandatory stop point, e.g. in front of a level crossing</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("mandatoryStop")]
        public bool MandatoryStopValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MandatoryStop-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MandatoryStop property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MandatoryStopValueSpecified { get; set; }
        
        /// <summary>
        /// <para>specifying the speedChange as a mandatory stop point, e.g. in front of a level crossing</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> MandatoryStop
        {
            get
            {
                if (this.MandatoryStopValueSpecified)
                {
                    return this.MandatoryStopValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MandatoryStopValue = value.GetValueOrDefault();
                this.MandatoryStopValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>indicates whether the speed aspect is shown next to the track by a signal or panel (true) or only in the "driver's timetable" (false)</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("signalised")]
        public bool SignalisedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Signalised-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Signalised property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SignalisedValueSpecified { get; set; }
        
        /// <summary>
        /// <para>indicates whether the speed aspect is shown next to the track by a signal or panel (true) or only in the "driver's timetable" (false)</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Signalised
        {
            get
            {
                if (this.SignalisedValueSpecified)
                {
                    return this.SignalisedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SignalisedValue = value.GetValueOrDefault();
                this.SignalisedValueSpecified = value.HasValue;
            }
        }
    }
}
