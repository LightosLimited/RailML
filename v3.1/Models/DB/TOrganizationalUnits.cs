//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.DB
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tOrganizationalUnits", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    internal partial class TOrganizationalUnits
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der diese Entit√§t eindeutig identifiziert, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.KeyAttribute()]
        public long Id { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TInfrastructureManager> _infrastructureManager;
        
        /// <summary>
        /// <para>de: Infrastrukturbetreiber</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("infrastructureManager", Order=0)]
        public System.Collections.ObjectModel.Collection<TInfrastructureManager> InfrastructureManager
        {
            get
            {
                return this._infrastructureManager;
            }
            private set
            {
                this._infrastructureManager = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InfrastructureManager-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the InfrastructureManager collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool InfrastructureManagerSpecified
        {
            get
            {
                return (this.InfrastructureManager.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TOrganizationalUnits" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TOrganizationalUnits" /> class.</para>
        /// </summary>
        public TOrganizationalUnits()
        {
            this._infrastructureManager = new System.Collections.ObjectModel.Collection<TInfrastructureManager>();
            this._vehicleManufacturer = new System.Collections.ObjectModel.Collection<TVehicleManufacturer>();
            this._vehicleOperator = new System.Collections.ObjectModel.Collection<TVehicleOperator>();
            this._customer = new System.Collections.ObjectModel.Collection<TCustomer>();
            this._railwayUndertaking = new System.Collections.ObjectModel.Collection<TRailwayUndertaking>();
            this._operationalUndertaking = new System.Collections.ObjectModel.Collection<TOperationalUndertaking>();
            this._concessionaire = new System.Collections.ObjectModel.Collection<TConcessionaire>();
            this._contractor = new System.Collections.ObjectModel.Collection<TContractor>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TVehicleManufacturer> _vehicleManufacturer;
        
        /// <summary>
        /// <para>de: Fahrzeughersteller</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("vehicleManufacturer", Order=1)]
        public System.Collections.ObjectModel.Collection<TVehicleManufacturer> VehicleManufacturer
        {
            get
            {
                return this._vehicleManufacturer;
            }
            private set
            {
                this._vehicleManufacturer = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VehicleManufacturer-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the VehicleManufacturer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool VehicleManufacturerSpecified
        {
            get
            {
                return (this.VehicleManufacturer.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TVehicleOperator> _vehicleOperator;
        
        /// <summary>
        /// <para>Some kind of subcontractor (railway undertaking) that operates the vehicle, if different from the one that is responsible for the commercial service</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("vehicleOperator", Order=2)]
        public System.Collections.ObjectModel.Collection<TVehicleOperator> VehicleOperator
        {
            get
            {
                return this._vehicleOperator;
            }
            private set
            {
                this._vehicleOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VehicleOperator-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the VehicleOperator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool VehicleOperatorSpecified
        {
            get
            {
                return (this.VehicleOperator.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TCustomer> _customer;
        
        /// <summary>
        /// <para>The authority or enterprise that ordered the transportation service, i.e., an integrated transit system</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("customer", Order=3)]
        public System.Collections.ObjectModel.Collection<TCustomer> Customer
        {
            get
            {
                return this._customer;
            }
            private set
            {
                this._customer = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Customer-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Customer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool CustomerSpecified
        {
            get
            {
                return (this.Customer.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TRailwayUndertaking> _railwayUndertaking;
        
        /// <summary>
        /// <para>The undertaking that is commercially responsible for the service</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("railwayUndertaking", Order=4)]
        public System.Collections.ObjectModel.Collection<TRailwayUndertaking> RailwayUndertaking
        {
            get
            {
                return this._railwayUndertaking;
            }
            private set
            {
                this._railwayUndertaking = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RailwayUndertaking-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RailwayUndertaking collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool RailwayUndertakingSpecified
        {
            get
            {
                return (this.RailwayUndertaking.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TOperationalUndertaking> _operationalUndertaking;
        
        /// <summary>
        /// <para>The unit that is responsible for the operational planning of this service</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("operationalUndertaking", Order=5)]
        public System.Collections.ObjectModel.Collection<TOperationalUndertaking> OperationalUndertaking
        {
            get
            {
                return this._operationalUndertaking;
            }
            private set
            {
                this._operationalUndertaking = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperationalUndertaking-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OperationalUndertaking collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool OperationalUndertakingSpecified
        {
            get
            {
                return (this.OperationalUndertaking.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TConcessionaire> _concessionaire;
        
        /// <summary>
        /// <para>de: Konzessionsinhaber</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("concessionaire", Order=6)]
        public System.Collections.ObjectModel.Collection<TConcessionaire> Concessionaire
        {
            get
            {
                return this._concessionaire;
            }
            private set
            {
                this._concessionaire = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Concessionaire-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Concessionaire collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool ConcessionaireSpecified
        {
            get
            {
                return (this.Concessionaire.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TContractor> _contractor;
        
        /// <summary>
        /// <para>Any unit or undertaking that has a binding not defined in a neighbouring element</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("contractor", Order=7)]
        public System.Collections.ObjectModel.Collection<TContractor> Contractor
        {
            get
            {
                return this._contractor;
            }
            private set
            {
                this._contractor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Contractor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Contractor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        public bool ContractorSpecified
        {
            get
            {
                return (this.Contractor.Count != 0);
            }
        }
    }
}
