//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("tBlockPart", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class TBlockPart : genericRailML.TElementWithIDAndName, IABlockPart
    {
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("begin", DataType="time")]
        public System.DateTime BeginValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Begin-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Begin property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool BeginValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Begin
        {
            get
            {
                if (this.BeginValueSpecified)
                {
                    return this.BeginValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BeginValue = value.GetValueOrDefault();
                this.BeginValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private string _beginDay = "0";
        
        [DefaultValueAttribute("0")]
        [XmlAttributeAttribute("beginDay")]
        public string BeginDay
        {
            get
            {
                return this._beginDay;
            }
            set
            {
                this._beginDay = value;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("end", DataType="time")]
        public System.DateTime EndValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die End-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the End property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool EndValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> End
        {
            get
            {
                if (this.EndValueSpecified)
                {
                    return this.EndValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EndValue = value.GetValueOrDefault();
                this.EndValueSpecified = value.HasValue;
            }
        }
        
        [XmlIgnoreAttribute()]
        private string _endDay = "0";
        
        [DefaultValueAttribute("0")]
        [XmlAttributeAttribute("endDay")]
        public string EndDay
        {
            get
            {
                return this._endDay;
            }
            set
            {
                this._endDay = value;
            }
        }
        
        /// <summary>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [XmlAttributeAttribute("startOcpRef")]
        public string StartOcpRef { get; set; }
        
        /// <summary>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [XmlAttributeAttribute("endOcpRef")]
        public string EndOcpRef { get; set; }
        
        /// <summary>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [XmlAttributeAttribute("trainPartRef")]
        public string TrainPartRef { get; set; }
        
        /// <summary>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [XmlAttributeAttribute("operatingPeriodRef")]
        public string OperatingPeriodRef { get; set; }
        
        [XmlAttributeAttribute("mission")]
        public string Mission { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("fixed")]
        public bool FixedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Fixed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Fixed property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool FixedValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public System.Nullable<bool> Fixed
        {
            get
            {
                if (this.FixedValueSpecified)
                {
                    return this.FixedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FixedValue = value.GetValueOrDefault();
                this.FixedValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>generic type for length values measured in kilometer</para>
        /// </summary>
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("runLength")]
        public decimal RunLengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RunLength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RunLength property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool RunLengthValueSpecified { get; set; }
        
        /// <summary>
        /// <para>generic type for length values measured in kilometer</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<decimal> RunLength
        {
            get
            {
                if (this.RunLengthValueSpecified)
                {
                    return this.RunLengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RunLengthValue = value.GetValueOrDefault();
                this.RunLengthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [XmlAttributeAttribute("vehicleRef")]
        public string VehicleRef { get; set; }
        
        /// <summary>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        [XmlAttributeAttribute("formationRef")]
        public string FormationRef { get; set; }
    }
}
