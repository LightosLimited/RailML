//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.DB
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tTrainRadioChange", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    internal partial class TTrainRadioChange : TOrientedElement, IATrainRadioInfrastructure, IAnyAttribute
    {
        
        /// <summary>
        /// <para>the train radio system, e.g. 'GSM-R'</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("radioSystem")]
        public string RadioSystem { get; set; }
        
        /// <summary>
        /// <para>defines the procedure of train radio network selection</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("networkSelection")]
        public string NetworkSelection { get; set; }
        
        /// <summary>
        /// <para>defines whether public emergency calls are available</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("publicEmergency")]
        public bool PublicEmergencyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublicEmergency-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublicEmergency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublicEmergencyValueSpecified { get; set; }
        
        /// <summary>
        /// <para>defines whether public emergency calls are available</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> PublicEmergency
        {
            get
            {
                if (this.PublicEmergencyValueSpecified)
                {
                    return this.PublicEmergencyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublicEmergencyValue = value.GetValueOrDefault();
                this.PublicEmergencyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>defines whether broadcast call functionality is available</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("broadcastCalls")]
        public bool BroadcastCallsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BroadcastCalls-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BroadcastCalls property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BroadcastCallsValueSpecified { get; set; }
        
        /// <summary>
        /// <para>defines whether broadcast call functionality is available</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> BroadcastCalls
        {
            get
            {
                if (this.BroadcastCallsValueSpecified)
                {
                    return this.BroadcastCallsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BroadcastCallsValue = value.GetValueOrDefault();
                this.BroadcastCallsValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>defines whether text message service (SMS) is available</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("textMessageService")]
        public bool TextMessageServiceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TextMessageService-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TextMessageService property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TextMessageServiceValueSpecified { get; set; }
        
        /// <summary>
        /// <para>defines whether text message service (SMS) is available</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> TextMessageService
        {
            get
            {
                if (this.TextMessageServiceValueSpecified)
                {
                    return this.TextMessageServiceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TextMessageServiceValue = value.GetValueOrDefault();
                this.TextMessageServiceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>defines whether direct mode train radio is available</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("directMode")]
        public bool DirectModeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DirectMode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DirectMode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DirectModeValueSpecified { get; set; }
        
        /// <summary>
        /// <para>defines whether direct mode train radio is available</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> DirectMode
        {
            get
            {
                if (this.DirectModeValueSpecified)
                {
                    return this.DirectModeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DirectModeValue = value.GetValueOrDefault();
                this.DirectModeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>defines whether roaming via public networks is available</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("publicNetworkRoaming")]
        public bool PublicNetworkRoamingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublicNetworkRoaming-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublicNetworkRoaming property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublicNetworkRoamingValueSpecified { get; set; }
        
        /// <summary>
        /// <para>defines whether roaming via public networks is available</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> PublicNetworkRoaming
        {
            get
            {
                if (this.PublicNetworkRoamingValueSpecified)
                {
                    return this.PublicNetworkRoamingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublicNetworkRoamingValue = value.GetValueOrDefault();
                this.PublicNetworkRoamingValueSpecified = value.HasValue;
            }
        }
    }
}
