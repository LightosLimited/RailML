//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.DB
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>data for a single train formation made of rs-vehicles</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tFormation", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EFormation))]
    internal partial class TFormation : TElementWithIDAndName, IAFormation
    {
        
        /// <summary>
        /// <para>number of similar formations forming that train</para>
        /// <para>generic type for counters (e.g. number of equipment), allowing zero</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("formationCount")]
        public string FormationCount { get; set; }
        
        /// <summary>
        /// <para>entire length of the formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("length")]
        public decimal LengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Length-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LengthValueSpecified { get; set; }
        
        /// <summary>
        /// <para>entire length of the formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Length
        {
            get
            {
                if (this.LengthValueSpecified)
                {
                    return this.LengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LengthValue = value.GetValueOrDefault();
                this.LengthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>allowed maximum speed for the entire formation (shall be in accordance with single vehicle speed values)</para>
        /// <para>generic type for speed/velocity values measured in kilometer per hour</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("speed")]
        public decimal SpeedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Speed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Speed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SpeedValueSpecified { get; set; }
        
        /// <summary>
        /// <para>allowed maximum speed for the entire formation (shall be in accordance with single vehicle speed values)</para>
        /// <para>generic type for speed/velocity values measured in kilometer per hour</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Speed
        {
            get
            {
                if (this.SpeedValueSpecified)
                {
                    return this.SpeedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SpeedValue = value.GetValueOrDefault();
                this.SpeedValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>DEPRECATED: weight in metrical tons of the entire formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("weight")]
        public decimal WeightValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Weight-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Weight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WeightValueSpecified { get; set; }
        
        /// <summary>
        /// <para>DEPRECATED: weight in metrical tons of the entire formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Weight
        {
            get
            {
                if (this.WeightValueSpecified)
                {
                    return this.WeightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WeightValue = value.GetValueOrDefault();
                this.WeightValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>gross weight (vehicles plus payload) in metrical tons of the entire formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("bruttoWeight")]
        public decimal BruttoWeightValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BruttoWeight-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BruttoWeight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BruttoWeightValueSpecified { get; set; }
        
        /// <summary>
        /// <para>gross weight (vehicles plus payload) in metrical tons of the entire formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> BruttoWeight
        {
            get
            {
                if (this.BruttoWeightValueSpecified)
                {
                    return this.BruttoWeightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BruttoWeightValue = value.GetValueOrDefault();
                this.BruttoWeightValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>net weight (payload only) in metrical tons of the entire formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("nettoWeight")]
        public decimal NettoWeightValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NettoWeight-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NettoWeight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NettoWeightValueSpecified { get; set; }
        
        /// <summary>
        /// <para>net weight (payload only) in metrical tons of the entire formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> NettoWeight
        {
            get
            {
                if (this.NettoWeightValueSpecified)
                {
                    return this.NettoWeightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NettoWeightValue = value.GetValueOrDefault();
                this.NettoWeightValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>tare weight (empty vehicles) in metrical tons of the entire formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("tareWeight")]
        public decimal TareWeightValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TareWeight-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TareWeight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TareWeightValueSpecified { get; set; }
        
        /// <summary>
        /// <para>tare weight (empty vehicles) in metrical tons of the entire formation (shall be in accordance with the sum of single vehicles)</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> TareWeight
        {
            get
            {
                if (this.TareWeightValueSpecified)
                {
                    return this.TareWeightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TareWeightValue = value.GetValueOrDefault();
                this.TareWeightValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>the international train category number as specified on page 38 in ERA_ERTMS_040001 "Assignment of values to ETCS variables" v1.9 from 10/07/12</para>
        /// <para>the international train category number as specified on page 38 in ERA_ERTMS_040001 "Assignment of values to ETCS variables" v1.9 from 10/07/12</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 15.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0", "15")]
        [System.Xml.Serialization.XmlAttributeAttribute("etcsTrainCategory")]
        public string EtcsTrainCategory { get; set; }
    }
}
