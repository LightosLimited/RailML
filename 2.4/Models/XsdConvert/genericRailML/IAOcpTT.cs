//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    internal partial interface IAOcpTT
    {
        
        /// <summary>
        /// <para>defines explicitly the order of the ocpTTs which are supposed to be in chronological order along the train path</para>
        /// <para>generic type for counters (e.g. order number of a vehicle in an formation), starting with '1'</para>
        /// </summary>
        string Sequence
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>refers to the id attribute of the associated ocp element</para>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        string OcpRef
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>refers to the id attribute of the associated track element</para>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        string TrackRef
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>is a description of the station track, often used for the platform number</para>
        /// </summary>
        string TrackInfo
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>describes if the train is going to stop/pass</para>
        /// </summary>
        System.Nullable<TOcpTTType> OcpType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>a free attribute for further descriptions</para>
        /// </summary>
        string Remarks
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>is true if the train changes its direction of travel at this station. After this station the rollingstock which is referenced in formationTT changes its order</para>
        /// </summary>
        System.Nullable<bool> TrainReverse
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>describes the alignment of the arriving train in relation to the point on a track referenced by ocpRef</para>
        /// </summary>
        System.Nullable<genericRailML.TTrainAlignment> Alignment
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>describes the offset of the stopping point in relation to the point on a track referenced by ocpRef</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        System.Nullable<decimal> Offset
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>is the driving time used inside a station</para>
        /// </summary>
        string ShuntingTime
        {
            get;
            set;
        }
    }
}
