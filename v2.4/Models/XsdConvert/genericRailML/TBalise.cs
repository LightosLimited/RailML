//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{   
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("tBalise", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class TBalise : TOrientedElement, IABalise
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1023.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "1023")]
        [XmlAttributeAttribute("countryID")]
        public string CountryID { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 16383.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "16383")]
        [XmlAttributeAttribute("groupID")]
        public string GroupID { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: -63.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "-63", "63")]
        [XmlAttributeAttribute("linkingAccuracy")]
        public string LinkingAccuracy { get; set; }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("linkReactionAscending")]
        public TBaliseLinkReaction LinkReactionAscendingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LinkReactionAscending-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LinkReactionAscending property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LinkReactionAscendingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public System.Nullable<TBaliseLinkReaction> LinkReactionAscending
        {
            get
            {
                if (this.LinkReactionAscendingValueSpecified)
                {
                    return this.LinkReactionAscendingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LinkReactionAscendingValue = value.GetValueOrDefault();
                this.LinkReactionAscendingValueSpecified = value.HasValue;
            }
        }
        
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("linkReactionDescending")]
        public TBaliseLinkReaction LinkReactionDescendingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LinkReactionDescending-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LinkReactionDescending property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool LinkReactionDescendingValueSpecified { get; set; }
        
        [XmlIgnoreAttribute()]
        public System.Nullable<TBaliseLinkReaction> LinkReactionDescending
        {
            get
            {
                if (this.LinkReactionDescendingValueSpecified)
                {
                    return this.LinkReactionDescendingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LinkReactionDescendingValue = value.GetValueOrDefault();
                this.LinkReactionDescendingValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>telegram coded to the balise; representation of the binary as hex string</para>
        /// <para>an arbitrary string consisting of hex digits from 0 to 9, a to f; not allowing white space, letters; no length restriction</para>
        /// <para xml:lang="en">Pattern: [0-9a-fA-F]*.</para>
        /// </summary>
        [RegularExpressionAttribute("[0-9a-fA-F]*")]
        [XmlAttributeAttribute("staticTelegram")]
        public string StaticTelegram { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 7.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0", "7")]
        [XmlAttributeAttribute("ndx")]
        public string Ndx { get; set; }
    }
}
