//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    internal partial interface IAWagon
    {
        
        /// <summary>
        /// <para>factor for increased running resistance by rotating masses of non-motored axles</para>
        /// </summary>
        System.Nullable<decimal> RotationMassFactor
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>additional mass for increased running resistance by rotating masses of non-motored axles</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        System.Nullable<decimal> AdditionalRotationMass
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>name of car body kinematic envelope as reference</para>
        /// <para>an detailed description of an railway facility (e.g. station, timetable period or vehicle), allowing digits, letters and white space</para>
        /// </summary>
        string KinematicEnvelope
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>continuous power consumption in Watt of auxiliaries within one car</para>
        /// <para>generic type for power values measured in watt</para>
        /// </summary>
        System.Nullable<decimal> AuxiliaryPowerConsumption
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>basic definition of head shape in order to derive air resistance of the vehicle</para>
        /// </summary>
        string HeadShape
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>cross-section area of vehicle front in order to derive air resistance of the vehicle</para>
        /// <para>generic type for area values measured in square meter</para>
        /// </summary>
        System.Nullable<decimal> HeadSurface
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>describes the type of the bearing used for calculating vehicle resistance</para>
        /// </summary>
        string BearingType
        {
            get;
            set;
        }
    }
}
