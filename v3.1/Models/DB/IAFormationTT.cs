//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.DB
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    internal partial interface IAFormationTT
    {
        
        /// <summary>
        /// <para>refers to the id attribute of the associated formation element</para>
        /// <para>an XML-side constrained reference to one xs:ID value, acts across an XML file including its outsourced components (xi:include mechanism)</para>
        /// </summary>
        string FormationRef
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>real weight of the formation while in use</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        System.Nullable<decimal> Weight
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>weight without engine</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        System.Nullable<decimal> Load
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>the real length of the formation while in use</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        System.Nullable<decimal> Length
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>the real maximum speed of the formation while in use</para>
        /// <para>generic type for speed/velocity values measured in kilometer per hour</para>
        /// </summary>
        System.Nullable<decimal> Speed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>assumed load (without engine) for timetable planning</para>
        /// <para>generic type for weight/load values measured in ton</para>
        /// </summary>
        System.Nullable<decimal> TimetableLoad
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para>indicates, that the formation is not as referenced but in the reversed order</para>
        /// </summary>
        System.Nullable<bool> OrientationReversed
        {
            get;
            set;
        }
    }
}
