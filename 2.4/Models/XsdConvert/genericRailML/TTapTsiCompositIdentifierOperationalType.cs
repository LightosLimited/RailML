//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("tTapTsiCompositIdentifierOperationalType", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlIncludeAttribute(typeof(genericRailML.ETapTsiTransportOperationalIdentifier))]
    internal partial class TTapTsiCompositIdentifierOperationalType : IATapTsiCompositIdentifierOperationalType
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der diese Entit√§t eindeutig identifiziert, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [KeyAttribute()]
        public long Id { get; set; }
        
        /// <summary>
        /// <para>Provides a possibility for differentiantion between the objects: Train, Path, Case Reference and Path Request</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// <para xml:lang="en">Pattern: [0-9A-Z]{2}.</para>
        /// </summary>
        [MinLengthAttribute(2)]
        [MaxLengthAttribute(2)]
        [RegularExpressionAttribute("[0-9A-Z]{2}")]
        [XmlAttributeAttribute("objectType")]
        public string ObjectType { get; set; }
        
        /// <summary>
        /// <para>Company code according TAP TSI B.8 and UIC IRS/leaflet 920-1:2006</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "0001", "9999")]
        [XmlAttributeAttribute("companyCode")]
        public string CompanyCode { get; set; }
        
        /// <summary>
        /// <para>It is the main part of identifier and is determent by the company that creates  it.</para>
        /// <para xml:lang="en">Minimum length: 12.</para>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// <para xml:lang="en">Pattern: [\-\*0-9A-Z]{12}.</para>
        /// </summary>
        [MinLengthAttribute(12)]
        [MaxLengthAttribute(12)]
        [RegularExpressionAttribute("[\\-\\*0-9A-Z]{12}")]
        [XmlAttributeAttribute("core")]
        public string Core { get; set; }
        
        /// <summary>
        /// <para>The variant shows a relationship between two identifiers referring to the same business case</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// <para xml:lang="en">Pattern: [0-9A-Z]{2}.</para>
        /// </summary>
        [MinLengthAttribute(2)]
        [MaxLengthAttribute(2)]
        [RegularExpressionAttribute("[0-9A-Z]{2}")]
        [XmlAttributeAttribute("variant")]
        public string Variant { get; set; }
        
        /// <summary>
        /// <para>Refers to the timetable period in which the business will be carried out</para>
        /// <para xml:lang="en">Minimum inclusive value: 2012.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2097.</para>
        /// </summary>
        [RangeAttribute(typeof(decimal), "2012", "2097")]
        [XmlAttributeAttribute("timetableYear")]
        public string TimetableYear { get; set; }
        
        /// <summary>
        /// <para>The start of the date/time in effect</para>
        /// <para xml:lang="en">Minimum inclusive value: 2012-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2097-12-31.</para>
        /// </summary>
        [RangeAttribute(typeof(System.DateTime), "2012-01-01", "2097-12-31")]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("startDate", DataType="date")]
        public System.DateTime StartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StartDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StartDate property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool StartDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para>The start of the date/time in effect</para>
        /// <para xml:lang="en">Minimum inclusive value: 2012-01-01.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2097-12-31.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> StartDate
        {
            get
            {
                if (this.StartDateValueSpecified)
                {
                    return this.StartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StartDateValue = value.GetValueOrDefault();
                this.StartDateValueSpecified = value.HasValue;
            }
        }
    }
}
