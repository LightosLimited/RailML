//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("eTrainPart", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class ETrainPart : genericRailML.TTrainPart
    {
        
        [XmlElementAttribute("formationTT", Order=0)]
        public EFormationTT FormationTT { get; set; }
        
        [XmlElementAttribute("operatingPeriodRef", Order=1)]
        public EOperatingPeriodRef OperatingPeriodRef { get; set; }
        
        [XmlElementAttribute("ocpsTT", Order=2)]
        public EOcpsTT OcpsTT { get; set; }
        
        [XmlElementAttribute("organizationalUnitBinding", Order=3)]
        public EOrganizationalUnitBinding OrganizationalUnitBinding { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<genericRailML.TAnnotationRef> _annotationRef;
        
        /// <summary>
        /// <para>refers to the id attribute of an annotation element</para>
        /// </summary>
        [XmlElementAttribute("annotationRef", Order=4)]
        public Collection<genericRailML.TAnnotationRef> AnnotationRef
        {
            get
            {
                return this._annotationRef;
            }
            private set
            {
                this._annotationRef = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnnotationRef-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the AnnotationRef collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        public bool AnnotationRefSpecified
        {
            get
            {
                return (this.AnnotationRef.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ETrainPart" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ETrainPart" /> class.</para>
        /// </summary>
        public ETrainPart()
        {
            this._annotationRef = new Collection<genericRailML.TAnnotationRef>();
            this._any = new Collection<System.Xml.Linq.XElement>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<System.Xml.Linq.XElement> _any;
        
        /// <summary>
        /// <para>Deprecated for next major release, use "generic any element" instead.</para>
        /// </summary>
        [XmlAnyElementAttribute(Order=5)]
        [NotMappedAttribute()]
        public Collection<System.Xml.Linq.XElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
    }
}
