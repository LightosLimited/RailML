//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("tMileageChange", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class TMileageChange : genericRailML.TElementWithIDAndName
    {
        
        [XmlElementAttribute("geoCoord", Order=0)]
        public TGeoCoord GeoCoord { get; set; }
        
        /// <summary>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [XmlAttributeAttribute("absPosIn")]
        public decimal AbsPosIn { get; set; }
        
        /// <summary>
        /// <para>DEPRECATED: not needed, not used</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("absPosInOffset")]
        public decimal AbsPosInOffsetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AbsPosInOffset-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AbsPosInOffset property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AbsPosInOffsetValueSpecified { get; set; }
        
        /// <summary>
        /// <para>DEPRECATED: not needed, not used</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<decimal> AbsPosInOffset
        {
            get
            {
                if (this.AbsPosInOffsetValueSpecified)
                {
                    return this.AbsPosInOffsetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AbsPosInOffsetValue = value.GetValueOrDefault();
                this.AbsPosInOffsetValueSpecified = value.HasValue;
            }
        }
        
        [XmlAttributeAttribute("type")]
        public TMileageChangeDescr Type { get; set; }
        
        /// <summary>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [XmlAttributeAttribute("absPos")]
        public decimal AbsPos { get; set; }
        
        /// <summary>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [XmlAttributeAttribute("pos")]
        public decimal Pos { get; set; }
        
        /// <summary>
        /// <para>defining a change direction for the mileageChange with values "raising" or "falling"</para>
        /// </summary>
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("absDir")]
        public genericRailML.TMileageDirection AbsDirValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AbsDir-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AbsDir property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool AbsDirValueSpecified { get; set; }
        
        /// <summary>
        /// <para>defining a change direction for the mileageChange with values "raising" or "falling"</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<genericRailML.TMileageDirection> AbsDir
        {
            get
            {
                if (this.AbsDirValueSpecified)
                {
                    return this.AbsDirValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AbsDirValue = value.GetValueOrDefault();
                this.AbsDirValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>DEPRECATED: use the new attribute absDir instead to define the mileage's change direction</para>
        /// </summary>
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("dir")]
        public genericRailML.TStrictDirection DirValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Dir-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Dir property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool DirValueSpecified { get; set; }
        
        /// <summary>
        /// <para>DEPRECATED: use the new attribute absDir instead to define the mileage's change direction</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<genericRailML.TStrictDirection> Dir
        {
            get
            {
                if (this.DirValueSpecified)
                {
                    return this.DirValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DirValue = value.GetValueOrDefault();
                this.DirValueSpecified = value.HasValue;
            }
        }
    }
}
