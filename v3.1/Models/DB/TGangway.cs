//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.DB
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>description of any gangways of the passenger car to other cars</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tGangway", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    internal partial class TGangway : IAGangway
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der diese Entit√§t eindeutig identifiziert, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.KeyAttribute()]
        public long Id { get; set; }
        
        /// <summary>
        /// <para>flag, whether there is a gangway at the front end of the vehicle</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("frontEnd")]
        public bool FrontEnd { get; set; }
        
        /// <summary>
        /// <para>flag, whether there is a gangway at the rear end of the vehicle</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("rearEnd")]
        public bool RearEnd { get; set; }
        
        /// <summary>
        /// <para>vertical position of the gangway, valid for both sides</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("position")]
        public string Position { get; set; }
        
        /// <summary>
        /// <para>type of design of the gangway</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("designType")]
        public string DesignType { get; set; }
        
        /// <summary>
        /// <para>height of gangways floor above top of rail</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("floorLevel")]
        public decimal FloorLevelValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FloorLevel-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FloorLevel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FloorLevelValueSpecified { get; set; }
        
        /// <summary>
        /// <para>height of gangways floor above top of rail</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> FloorLevel
        {
            get
            {
                if (this.FloorLevelValueSpecified)
                {
                    return this.FloorLevelValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FloorLevelValue = value.GetValueOrDefault();
                this.FloorLevelValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>height of gangway for passenger use</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("gangwayHeight")]
        public decimal GangwayHeightValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GangwayHeight-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GangwayHeight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GangwayHeightValueSpecified { get; set; }
        
        /// <summary>
        /// <para>height of gangway for passenger use</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> GangwayHeight
        {
            get
            {
                if (this.GangwayHeightValueSpecified)
                {
                    return this.GangwayHeightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GangwayHeightValue = value.GetValueOrDefault();
                this.GangwayHeightValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>width of gangway for passenger use</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("gangwayWidth")]
        public decimal GangwayWidthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GangwayWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GangwayWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GangwayWidthValueSpecified { get; set; }
        
        /// <summary>
        /// <para>width of gangway for passenger use</para>
        /// <para>generic type for length values measured in meter</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> GangwayWidth
        {
            get
            {
                if (this.GangwayWidthValueSpecified)
                {
                    return this.GangwayWidthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GangwayWidthValue = value.GetValueOrDefault();
                this.GangwayWidthValueSpecified = value.HasValue;
            }
        }
    }
}
