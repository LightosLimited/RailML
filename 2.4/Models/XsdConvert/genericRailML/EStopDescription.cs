//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("eStopDescription", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    internal partial class EStopDescription : genericRailML.TStopDescription
    {
        
        [XmlElementAttribute("stopTimes", Order=0)]
        public genericRailML.TStopTimes StopTimes { get; set; }
        
        /// <summary>
        /// <para>Activities carried out at stop</para>
        /// </summary>
        [XmlElementAttribute("stopActivities", Order=1)]
        public EStopActivities StopActivities { get; set; }
        
        [XmlIgnoreAttribute()]
        private Collection<genericRailML.TPlatformEdgeRef> _platformEdgeRef;
        
        /// <summary>
        /// <para>refers to the id attribute of the associated platform edge element, redundant if stopPostRef is given</para>
        /// </summary>
        [XmlElementAttribute("platformEdgeRef", Order=2)]
        public Collection<genericRailML.TPlatformEdgeRef> PlatformEdgeRef
        {
            get
            {
                return this._platformEdgeRef;
            }
            private set
            {
                this._platformEdgeRef = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlatformEdgeRef-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PlatformEdgeRef collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        public bool PlatformEdgeRefSpecified
        {
            get
            {
                return (this.PlatformEdgeRef.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EStopDescription" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EStopDescription" /> class.</para>
        /// </summary>
        public EStopDescription()
        {
            this._platformEdgeRef = new Collection<genericRailML.TPlatformEdgeRef>();
            this._serviceSectionRef = new Collection<genericRailML.TServiceSectionRef>();
            this._trackInfo = new Collection<genericRailML.TStationTrackInfo>();
            this._annotationRef = new Collection<genericRailML.TAnnotationRef>();
        }
        
        [XmlIgnoreAttribute()]
        private Collection<genericRailML.TServiceSectionRef> _serviceSectionRef;
        
        /// <summary>
        /// <para>refers to the id attribute of the associated service section element</para>
        /// </summary>
        [XmlElementAttribute("serviceSectionRef", Order=3)]
        public Collection<genericRailML.TServiceSectionRef> ServiceSectionRef
        {
            get
            {
                return this._serviceSectionRef;
            }
            private set
            {
                this._serviceSectionRef = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ServiceSectionRef-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ServiceSectionRef collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        public bool ServiceSectionRefSpecified
        {
            get
            {
                return (this.ServiceSectionRef.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<genericRailML.TStationTrackInfo> _trackInfo;
        
        /// <summary>
        /// <para>allows definition operating day specific information for station tracks</para>
        /// </summary>
        [XmlElementAttribute("trackInfo", Order=4)]
        public Collection<genericRailML.TStationTrackInfo> TrackInfo
        {
            get
            {
                return this._trackInfo;
            }
            private set
            {
                this._trackInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TrackInfo-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TrackInfo collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        public bool TrackInfoSpecified
        {
            get
            {
                return (this.TrackInfo.Count != 0);
            }
        }
        
        [XmlIgnoreAttribute()]
        private Collection<genericRailML.TAnnotationRef> _annotationRef;
        
        /// <summary>
        /// <para>refers to the id attribute of an annotation element</para>
        /// </summary>
        [XmlElementAttribute("annotationRef", Order=5)]
        public Collection<genericRailML.TAnnotationRef> AnnotationRef
        {
            get
            {
                return this._annotationRef;
            }
            private set
            {
                this._annotationRef = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnnotationRef-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the AnnotationRef collection is empty.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        public bool AnnotationRefSpecified
        {
            get
            {
                return (this.AnnotationRef.Count != 0);
            }
        }
    }
}
