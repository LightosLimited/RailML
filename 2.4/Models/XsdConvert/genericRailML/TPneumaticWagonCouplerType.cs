//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Xml.Serialization;

namespace Models.XsdConvert.genericRailML
{
    /// <summary>
    /// <para>data of available pneumatic couplers between wagons</para>
    /// </summary>
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [SerializableAttribute()]
    [XmlTypeAttribute("tPneumaticWagonCouplerType", Namespace="https://www.railml.org/schemas/2018")]
    [DebuggerStepThroughAttribute()]
    [DesignerCategoryAttribute("code")]
    [XmlIncludeAttribute(typeof(genericRailML.EPneumaticCoupler))]
    internal partial class TPneumaticWagonCouplerType : IAPneumaticWagonCoupler
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der diese Entit√§t eindeutig identifiziert, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [KeyAttribute()]
        public long Id { get; set; }
        
        /// <summary>
        /// <para>basic position of the pneumatic wagon coupler (front/rear/both)</para>
        /// </summary>
        [XmlAttributeAttribute("positionOnCarEnd")]
        public TEndPositionType PositionOnCarEnd { get; set; }
        
        /// <summary>
        /// <para>the function the pneumatic coupler is used for</para>
        /// </summary>
        [XmlAttributeAttribute("couplerFunction")]
        public string CouplerFunction { get; set; }
        
        /// <summary>
        /// <para>flag, whether the pneumatic coupler is integrated in the mechanical coupler and coupled automatically</para>
        /// </summary>
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        [NotMappedAttribute()]
        [XmlAttributeAttribute("integratedOnMechanicalCoupler")]
        public bool IntegratedOnMechanicalCouplerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IntegratedOnMechanicalCoupler-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IntegratedOnMechanicalCoupler property is specified.</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        [NotMappedAttribute()]
        [EditorBrowsableAttribute(EditorBrowsableState.Never)]
        public bool IntegratedOnMechanicalCouplerValueSpecified { get; set; }
        
        /// <summary>
        /// <para>flag, whether the pneumatic coupler is integrated in the mechanical coupler and coupled automatically</para>
        /// </summary>
        [XmlIgnoreAttribute()]
        public System.Nullable<bool> IntegratedOnMechanicalCoupler
        {
            get
            {
                if (this.IntegratedOnMechanicalCouplerValueSpecified)
                {
                    return this.IntegratedOnMechanicalCouplerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IntegratedOnMechanicalCouplerValue = value.GetValueOrDefault();
                this.IntegratedOnMechanicalCouplerValueSpecified = value.HasValue;
            }
        }
    }
}
