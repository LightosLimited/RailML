//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This C# code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Models.XsdConvert.genericRailML
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>data for tilting mechanism of passenger cars</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("tTilting", Namespace="https://www.railml.org/schemas/2018")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    internal partial class TTilting : IATilting
    {
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der diese Entit√§t eindeutig identifiziert, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value uniquely identifying this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.KeyAttribute()]
        public long Id { get; set; }
        
        /// <summary>
        /// <para>maximum tilting angle in degrees</para>
        /// <para>generic type for angle values measured in degree, allowing 0 ... +90</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 90.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("maxTiltingAngle")]
        public decimal MaxTiltingAngleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxTiltingAngle-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxTiltingAngle property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaxTiltingAngleValueSpecified { get; set; }
        
        /// <summary>
        /// <para>maximum tilting angle in degrees</para>
        /// <para>generic type for angle values measured in degree, allowing 0 ... +90</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 90.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> MaxTiltingAngle
        {
            get
            {
                if (this.MaxTiltingAngleValueSpecified)
                {
                    return this.MaxTiltingAngleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaxTiltingAngleValue = value.GetValueOrDefault();
                this.MaxTiltingAngleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>way of actuating the car body tilting (active/passive)</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("actuation")]
        public TTiltingActuationType ActuationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Actuation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Actuation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ActuationValueSpecified { get; set; }
        
        /// <summary>
        /// <para>way of actuating the car body tilting (active/passive)</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<TTiltingActuationType> Actuation
        {
            get
            {
                if (this.ActuationValueSpecified)
                {
                    return this.ActuationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActuationValue = value.GetValueOrDefault();
                this.ActuationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para>speed of changing the tilting angle in degrees per second</para>
        /// <para>generic type for angular speed/velocity values measured in degree per second</para>
        /// <para xml:lang="en">Total number of digits in fraction: 3.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("tiltingSpeed")]
        public decimal TiltingSpeedValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TiltingSpeed-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TiltingSpeed property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TiltingSpeedValueSpecified { get; set; }
        
        /// <summary>
        /// <para>speed of changing the tilting angle in degrees per second</para>
        /// <para>generic type for angular speed/velocity values measured in degree per second</para>
        /// <para xml:lang="en">Total number of digits in fraction: 3.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> TiltingSpeed
        {
            get
            {
                if (this.TiltingSpeedValueSpecified)
                {
                    return this.TiltingSpeedValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TiltingSpeedValue = value.GetValueOrDefault();
                this.TiltingSpeedValueSpecified = value.HasValue;
            }
        }
    }
}
